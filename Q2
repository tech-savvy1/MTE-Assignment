**Q2. Write a program to find the sum of elements in a given range [L, R] using a prefix sum 
array. Write its algorithm, program. Find its time and space complexities. Explain with 
suitable example.**

**Algorithm:**
- Compute the prefix sum array.
- For any range [L, R], return prefix[R] - prefix[L-1] (if L > 0) else prefix[R].

**Program:**
public class PrefixSumArray {
    static void prefixSum(int[] arr, int[] prefix, int n){
        prefix[0] = arr[0];
        for(int i=1; i<n; i++){
            prefix[i] = prefix[i-1] + arr[i];
        }
    }

    static int query(int[] prefix, int l, int r){
        if(l==0){
            return prefix[r];
        }
        return prefix[r] - prefix[l-1];
    }
    
    public static void main(String[] args){
        int[] arr = {1, 2, 3, 4, 5};
        int n = arr.length;
        int[] prefix = new int[n];
        prefixSum(arr, prefix, n);
        int sum = query(prefix, 0, 4);
        System.out.println("Sum of elements from index 0 to 4: " + sum);
    }
}

**Time Complexity:**
Prefix array creation: O(n)
Range sum query: O(1)

**Space Complexity:** O(n)
